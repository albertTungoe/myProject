chat <- read.table("C:/Users/Kira/OneDrive/Journocode/whatsapp/Whatsapp Chat mit journocode.txt",
        header = FALSE, sep = " ")
cat("Rows without time stamp:", length(grep("^\\D", chat[,1])),
    "(", grep("^\\D", chat[,1]), ")", "\n")
chat <- cbind(chat, matrix(nrow = nrow(chat), ncol = 5))
cat("Shifting rows without time stamp...", "\n")
for(row in grep("^\\D", chat[,1])){
      end <- which(is.na(chat[row,]))[1] #first column without text in it
      chat[row, 6:(5+end)]<- chat[row, 1:(end-1)]
      chat[row, 1:(end-1)] <- NA
}
chat <- chat[-which(apply(chat, 1, function(x) all(is.na(x))) == TRUE),]
chat <-chat[grepl(".+:$", chat[,5]) |
                  grepl(".+:$", chat[,4]) | 
                  is.na(chat[,1]), ]
 for(row in which(!grepl(".+:$", chat[,5]))){
      end <- which(is.na(chat[row,]))[1] #first column without chat content
      chat[row,end]<- chat[row,5]
      chat[row,5] <- NA
}
for(row in which(is.na(chat[,1]))){
      chat[row,1:5] <- chat[(row-1), 1:5]
}
chat <- chat[,-3]
 
chat[,1] <- paste(chat[,1], chat[,2])
chat <- chat[,-2]
 colnames(chat)[1:3] <- c("time", "name", "surname")
chat$time <- strptime(chat$time, format = "%d.%m.%Y, %H:%M")
"%Y-%m-%d %H:%M:%S"
chat$name <- gsub(":$", "", chat$name)
chat$surname <- gsub(":$", "", chat$surname)
save(chat, file = "mca.Rdata")
mca <- read.csv("mca.csv")
head(mca,10)
summary(mca$sender)
plot(x=mca$AM.PM, y=mca$sender, type = 'p', col= "red")
library("dplyr")
library("ggplot2")
library("lubridate")
ggplot(mca, aes(x=hour, fill=sender)) + geom_histogram(binwidth = 7, position = 'dodge')
library("dplyr")
       library("ggplot2")
       library("lubridate")
       ggplot(mca, aes(x=month, fill=sender)) + geom_histogram(position = 'dodge', stat = "count")
library("dplyr")
       library("ggplot2")
       library("lubridate")
       mca$date <- as.Date(as.character(mca$date), format = "%d-%m-%y")
       ggplot(mca, aes(x=date, fill=sender)) + geom_histogram(binwidth = 7, position = 'dodge')
chat %>%
  mutate(day = date(time)) %>%
  count(author) %>%
  ggplot(aes(x = reorder(author, n), y = n)) +
  geom_bar(stat = "identity") +
  ylab("") + xlab("") +
  coord_flip() +
  ggtitle("Number of messages")

library("tidytext")
chat %>%
  unnest_tokens(input = text,
                output = word) %>%
  count(author, word, sort = TRUE) %>%
  group_by(author) %>%
  top_n(n = 6, n) %>%
  ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
  geom_col(show.legend = FALSE) +
  ylab("") +
  xlab("") +
  coord_flip() +
  facet_wrap(~author, ncol = 2, scales = "free_y") +
  scale_x_reordered() +
  ggtitle("Most often used words")

  library("dplyr")
       library("ggplot2"); theme_set(theme_minimal())
       library("lubridate")
       mca %>%
         mutate(day = date(time)) %>%
         count(day) %>%
         ggplot(aes(x = day, y = n)) +
         geom_bar(stat = "identity") +
         ylab("") + xlab("") +
         ggtitle("message per day")
library(plotrix)
x <-  c(21,53)
labels <-  c(“AM”, “PM”)
piepercent<- round(100*x/sum(x), 1)
png(file = "time.jpg")
pie(x, labels = piepercent, main = "City pie chart",col = rainbow(length(x)))
legend("topright", c("AM", “PM”), cex = 0.8,
   fill = rainbow(length(x)))
dev.off()
library("tidyr")
chat %>%
  unnest(emoji) %>%
  count(author, emoji, sort = TRUE) %>%
  group_by(author) %>%
  top_n(n = 6, n) %>%
  ggplot(aes(x = reorder(emoji, n), y = n, fill = author)) +
  geom_col(show.legend = FALSE) +
  ylab("") +
  xlab("") +
  coord_flip() +
  facet_wrap(~author, ncol = 2, scales = "free_y")  +
  ggtitle("Most often used emojis")
